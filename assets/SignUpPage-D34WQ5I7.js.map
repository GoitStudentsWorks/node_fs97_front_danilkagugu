{"version":3,"file":"SignUpPage-D34WQ5I7.js","sources":["../../src/components/SignUpForm/SignUpForm.jsx","../../src/pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import css from \"../SignUpForm/SignUpForm.module.css\";\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Logo from \"../Logo/Logo\";\nimport sprite from \"../../assets/icons.svg\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { requestSignUp } from \"../../services/authApi\";\nimport { toast } from \"react-toastify\";\nimport GoogleBtn from \"../GoogleBtn/GoogleBtn\";\nimport { useTranslation } from \"react-i18next\";\n\nconst UserRegisterSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Must be a valid email!\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(6, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Password is required\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Repeat Password is required\"),\n});\n\nconst INITIAL_FORM_DATA = {\n  email: \"\",\n  password: \"\",\n  repeatPassword: \"\",\n};\n\nconst SignUpForm = () => {\n  const { t } = useTranslation();\n  const [isVisible, setIsVisible] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touchedFields },\n  } = useForm({\n    resolver: yupResolver(UserRegisterSchema),\n    defaultValues: INITIAL_FORM_DATA,\n  });\n  const onSubmit = async (data) => {\n    try {\n      const response = await requestSignUp(data);\n      toast.success(\"You have successfully registered\");\n      if (response) {\n        navigate(\"/signin\");\n      }\n    } catch (e) {\n      toast.error(e.response.data.message || \"Something went wrong\");\n    }\n  };\n\n  return (\n    <div className={css.singUpFormWrapper}>\n      <div className={css.logoSingUp}>\n        <Logo />\n      </div>\n      <div className={css.signUpContainer}>\n        <form\n          className={css.formRegistration}\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <h1 className={css.formTitle}>{t(\"sign_up\")}</h1>\n          <div className={css.inputConatiner}>\n            <label className={css.labelRegistration}>\n              <span className={css.formRegistrationText}>{t(\"email\")}</span>\n              <input\n                className={`${css.formInputRegistration} ${\n                  errors.email && touchedFields.email\n                    ? css.formInputError\n                    : touchedFields.email\n                    ? css.formInputValid\n                    : \"\"\n                }`}\n                type=\"email\"\n                {...register(\"email\")}\n                autoComplete=\"email\"\n                placeholder={t(\"placeholder.email\")}\n              />\n              {errors.email && touchedFields.email ? (\n                <div className={css.errorMsg}>{errors.email.message}</div>\n              ) : null}\n            </label>\n            <label className={css.labelRegistration}>\n              <span className={css.formRegistrationText}>{t(\"password\")}</span>\n              <div className={css.inputIconWrapper}>\n                <input\n                  className={`${css.formInputRegistration} ${\n                    errors.password && touchedFields.password\n                      ? css.formInputError\n                      : touchedFields.password\n                      ? css.formInputValid\n                      : \"\"\n                  }`}\n                  type={isVisible ? \"text\" : \"password\"}\n                  {...register(\"password\")}\n                  autoComplete=\"new-password\"\n                  placeholder={t(\"placeholder.password\")}\n                />\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  className={css.singUpIcon}\n                  onClick={() => setIsVisible(!isVisible)}\n                >\n                  <use\n                    href={`${sprite}#icon-${isVisible ? \"eye\" : \"eye-off\"}`}\n                  ></use>\n                </svg>\n              </div>\n              {errors.password && touchedFields.password ? (\n                <div className={css.errorMsg}>{errors.password.message}</div>\n              ) : null}\n            </label>\n            <label className={css.labelRegistration}>\n              <span className={css.formRegistrationText}>\n                {t(\"repeat_password\")}\n              </span>\n              <div className={css.inputIconWrapper}>\n                <input\n                  className={`${css.formInputRegistration} ${\n                    errors.repeatPassword && touchedFields.repeatPassword\n                      ? css.formInputError\n                      : touchedFields.repeatPassword\n                      ? css.formInputValid\n                      : \"\"\n                  }`}\n                  type={isVisible ? \"text\" : \"password\"}\n                  {...register(\"repeatPassword\")}\n                  autoComplete=\"new-password\"\n                  placeholder={t(\"placeholder.password\")}\n                />\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  className={css.singUpIcon}\n                  onClick={() => setIsVisible(!isVisible)}\n                >\n                  <use\n                    href={`${sprite}#icon-${isVisible ? \"eye\" : \"eye-off\"}`}\n                  ></use>\n                </svg>\n              </div>\n              {errors.repeatPassword && touchedFields.repeatPassword ? (\n                <div className={css.errorMsg}>\n                  {errors.repeatPassword.message}\n                </div>\n              ) : null}\n            </label>\n          </div>\n          <button\n            className={css.submitBtn}\n            type=\"submit\"\n            title=\"Click to register user\"\n            aria-label=\"Add user\"\n          >\n            {t(\"sign_up\")}\n          </button>\n\n          <div className={css.signUpInfo}>\n            <p className={css.registrationText}>\n              <span className={css.registrationTextInfo}>\n                {t(\"have_account\")}?&nbsp;\n              </span>{\" \"}\n              <Link to={\"/signin\"} className={css.signInLink}>\n                {t(\"sign_in\")}\n              </Link>\n            </p>\n            <GoogleBtn type={t(\"sign_up\")} />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import SingUpForm from \"../../components/SignUpForm/SignUpForm\";\nimport AdvantagesSection from \"../../components/AdvantagesSection/AdvantagesSection\";\nimport DocumentTitle from \"../../components/DocumentTitle/DocumentTitle\";\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <DocumentTitle>Sign Up</DocumentTitle>\n      <SingUpForm />\n\n      <AdvantagesSection isHideMobile={true} />\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["UserRegisterSchema","Yup.object","Yup.string","Yup.ref","INITIAL_FORM_DATA","SignUpForm","t","useTranslation","isVisible","setIsVisible","useState","navigate","useNavigate","register","handleSubmit","errors","touchedFields","useForm","yupResolver","onSubmit","data","response","requestSignUp","toast","e","jsxs","css","jsx","Logo","sprite","Link","GoogleBtn","SignUpPage","Fragment","DocumentTitle","SingUpForm","AdvantagesSection"],"mappings":"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"}